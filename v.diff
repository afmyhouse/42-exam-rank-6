15c15
< void fatal(void ) {
---
> void fatal(void) {
22,23c22
<         if (FD_ISSET(bfd, &wfds) && bfd != fd)
<             send (bfd, m, strlen(m), 0);
---
>         if (FD_ISSET(bfd, &wfds) && bfd != fd) send(bfd, m, strlen(m), 0);
28c27
<     for (int fd = 0; fd <= mfd; fd++) {
---
>     for (int fd = 0; fd <= mfd; fd++ ){
33,34c32
<         if (cls[fd].m)
<             free(cls[fd].m);
---
>         if (cls[fd].m) free(cls[fd].m);
88c86
<         write (2, "Wrong number of arguments\n", 26);
---
>         write(2, "Wrong number of arguments\n", 26);
97a96
> 	bzero(&servaddr, sizeof(servaddr)); 
108d106
< 
113,114c111
<     t_client  cls[CSIZE];
< 
---
>     t_client cls[CSIZE];
116d112
< 
119d114
< 
126c121
<         if (active == -1) {
---
>         if (active == -1){
136d130
<                 FD_SET(fd, &afds);
138c132
< 
---
>                 FD_SET(fd, &afds);
143a138
> 
147,154c142,163
<                 if (FD_ISSET(fd, &rfds)) {
<                     char buff[BSIZE];
<                     bzero(buff, BSIZE);
<                     int bytes = recv(fd, buff, BSIZE - 1, 0);
<                     if (bytes <= 0) {
<                         char m[MSIZE];
<                         bzero(m, MSIZE);
<                         sprintf(m, "server: client %d just left\n", cls[fd].id);
---
>                 char buff[BSIZE];
>                 bzero(buff, BSIZE);
>                 int bytes = recv(fd, buff, BSIZE - 1, 0);
>                 if (bytes <= 0) {
>                     char m[MSIZE];
>                     bzero(m, MSIZE);
>                     sprintf(m, "server: client %d just left\n", cls[fd].id);
>                     broadcast(fd, mfd, wfds, m);
>                     FD_CLR(fd, &afds);
>                     close(fd);
>                     if (cls[fd].m) {
>                         free(cls[fd].m);
>                         cls[fd].m = NULL;
>                     }
>                 }
>                 else {
>                     char *line = NULL;
>                     cls[fd].m = str_join(cls[fd].m, buff);
>                     while(extract_message(&(cls[fd].m), &line)) {
>                         char m[MSIZE + strlen(line)];
>                         bzero(m, MSIZE + strlen(line));
>                         sprintf(m, "client %d: %s", cls[fd].id, line);
156,161c165,166
<                         FD_CLR(fd, &afds);
<                         close(fd);
<                         if (cls[fd].m) {
<                             free(cls[fd].m);
<                             cls[fd].m = NULL;
<                         }
---
>                         free(line);
>                         line = NULL;
163,177c168,170
<                     else {
<                         char *line = NULL;
<                         cls[fd].m = str_join(cls[fd].m, buff);
<                         while(extract_message(&(cls[fd].m), &line)) {
<                             char m[MSIZE + strlen(line)];
<                             bzero(m, MSIZE + strlen(line));
<                             sprintf(m, "client %d: %s", cls[fd].id, line);
<                             broadcast(fd, mfd, wfds, m);
<                             free(line);
<                             line = NULL;
<                         }
<                         if (cls[fd].m[0] == '\0') {
<                             free(cls[fd].m);
<                             cls[fd].m = NULL;
<                         }
---
>                     if (cls[fd].m[0] == '\0') {
>                         free(cls[fd].m);
>                         cls[fd].m = NULL;
179a173
>                 
183,184c177,178
<     clean(mfd,cls, afds);
<     return (0);
---
>     clean(mfd, cls, afds);
> 	return (0);
